name: Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Images to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Ensure ECR repository exists
        uses: int128/create-ecr-repository-action@v1
        id: ecr-frontend
        with:
          repository: frontend

      - name: Ensure ECR repository exists
        uses: int128/create-ecr-repository-action@v1
        id: ecr-backend
        with:
          repository: backend

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.ecr-frontend.outputs.repository-uri }}:latest
          build-args: |
            REACT_APP_GOOGLE_MAPS_API_KEY=${{ secrets.REACT_APP_GOOGLE_MAPS_API_KEY }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ steps.ecr-backend.outputs.repository-uri }}:latest

  deploy:
    name: Deploy to Kubernetes
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubeconfig
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.24.0"

      - name: Configure AWS credentials (for EKS)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kube config
        run: aws eks update-kubeconfig --name transport

      - name: Deploy the application to Kubernetes
        run: |
          kubectl apply -f k8s --recursive
